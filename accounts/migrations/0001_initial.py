# Generated by Django 4.1.6 on 2023-02-05 16:41

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=50, unique=True)),
                ('first_name', models.CharField(error_messages={'required': 'Le prénom est requis'}, max_length=30)),
                ('last_name', models.CharField(error_messages={'required': 'Le nom est requis'}, max_length=150)),
                ('email', models.EmailField(error_messages={'required': "L'email est requis", 'unique': "L'email est déjà utilisé"}, max_length=255, unique=True)),
                ('mobile_phone', models.CharField(error_messages={'required': 'Le numéro de téléphone mobile est requis'}, max_length=15, validators=[django.core.validators.RegexValidator('^\\d{10,15}$', "Le numéro de téléphone mobile n'est pas valide")])),
                ('home_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^\\d{10,15}$', "Le numéro de téléphone fixe n'est pas valide")])),
                ('adress', models.CharField(error_messages={'required': "L'adresse est requise"}, max_length=255)),
                ('zip_code', models.CharField(error_messages={'required': 'Le code postal est requis'}, max_length=10, validators=[django.core.validators.RegexValidator('^\\d{5,10}$', "Le code postal n'est pas valide")])),
                ('city', models.CharField(error_messages={'required': 'La ville est requise'}, max_length=100)),
                ('country', models.CharField(choices=[('France', 'France'), ('Etats-Unis', 'Etats-Unis'), ('Angleterre', 'Angleterre'), ('Canada', 'Canada')], error_messages={'required': 'Le pays est requis'}, max_length=50)),
                ('kbis', models.CharField(error_messages={'required': 'Le numéro de KBIS est requis'}, max_length=100, validators=[django.core.validators.RegexValidator('^[0-9]{14}$', "Le numéro de KBIS n'est pas valide")])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
